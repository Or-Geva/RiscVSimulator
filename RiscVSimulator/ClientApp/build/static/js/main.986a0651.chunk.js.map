{"version":3,"sources":["RISC-V-logo.svg","components/Editor.js","components/Utils/DeepCopy.js","components/State/State.js","components/State/Reducer.js","components/State/stateAction.js","components/State/ActionTypes.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Editor","props","react_default","a","createElement","lib_default","mode","theme","color","name","value","program","onChange","onProgramChange","editorProps","$blockScrolling","enableBasicAutocompletion","enableLiveAutocompletion","annotations","error","enableSnippets","height","maxHeight","width","fontSize","textSize","setOptions","highlightActiveLine","highlightSelectedWord","onInput","CleanError","modifyState","state","modify","obj","stateCopy","JSON","parse","stringify","initState","collapsed","view","registers","textEditor","memory","console","graphicBorder","textColor","tableSize","currentTableView","startAddressInCurrentPage","rows","byteNumberZero","byteNumberOne","byteNumberTwo","byteNumberThree","key","debugSnapshot","lineOfDebugSnapshot","loading","alphanumericData","alphanumericLine","DebugMode","commandsToExe","debugRes","tayping","res","stringTable","paintBord","lines","include","item","arr","jsonItem","result","forEach","arrItem","points","reducer","action","type","s","data","index","debugMode","register","output","reduce","str","lineToContinue","push","row","debugLine","text","line","message","remove","filter","startAddres","i","address","toString","ColorEditor","colorName","TextSize","TableSize","PrepareTablePage","FetchCompileSuccess","compileProgram","FetchDebugSuccess","debugProgram","arguments","length","undefined","FetchContinueProgramResult","FetchCompileProgramfail","TypingSwitch","bool","WebLayout","fileReader","Content","Layout","Sider","TextArea","Input","SubMenu","Menu","ButtonGroup","Button","Group","_useReducer","useReducer","_useReducer2","Object","slicedToArray","dispatch","uploadRef","useRef","originPaint","x","y","brushColor","brushRadius","useEffect","stateAction","paintCoordinates","borderData","coordinate","moveCoordinateTo","origin","moveX","moveY","map","point","onRegisterChange","event","arrNum","registerInfo","target","id","handleFileRead","e","content","jumpTo","menu","es_menu","Item","rel","onClick","layout","style","minHeight","collapsible","onCollapse","margin","src","logoIMG","className","alt","title","icon","download","current","click","display","ref","accpet","multiple","FileReader","onloadend","readAsText","files","axios","post","window","location","Program","Registers","then","catch","err","response","background","log","breadcrumb","minWidth","borderRight","padding","components_Editor","es","lazyRadius","saveData","immediateLoading","canvasWidth","canvasHeight","disabled","flexWrap","overflowX","TextField_default","label","variant","table","dataSource","bordered","pagination","size","Column","dataIndex","ColumnGroup","justifyContent","marginBottom","marginTop","es_button","dropdown","borderLeftColor","overlay","placement","onPressEnter","input","Register","StackTextFreePosition","stackTextFreePosition","StackStaticDataFreePosition","stackStaticDataFreePosition","StackDynamicDataFreePosition","stackDynamicDataFreePosition","Memory","DebugLine","GraphicBorder","AlphanumericData","App","components_Layout","Component","Boolean","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.986a0651.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RISC-V-logo.43fe397e.svg\";","import React, { useState } from 'react';\r\nimport AceEditor from 'react-ace';\r\nimport brace from 'brace';\r\n\r\nimport \"brace/mode/sql\";\r\nimport \"brace/snippets/sql\";\r\nimport \"brace/ext/language_tools\";\r\nimport \"brace/theme/chaos\";\r\nimport \"brace/theme/chrome\";\r\nimport \"brace/theme/github\";\r\nimport \"brace/theme/kuroir\";\r\nimport \"brace/theme/monokai\";\r\nimport \"brace/theme/sqlserver\";\r\nimport \"brace/theme/terminal\";\r\nimport \"brace/theme/cobalt\";\r\n\r\nimport \"brace/theme/tomorrow\";\r\nimport \"brace/theme/twilight\";\r\n\r\nimport \"brace/theme/xcode\";\r\n\r\nconst Editor = (props) => {\r\n    return <AceEditor\r\n        mode=\"sql\"\r\n        theme={props.color}\r\n        name=\"UNIQUE_ID_OF_DIV\"\r\n        value={props.program}\r\n        onChange={props.onProgramChange}\r\n        editorProps={{ $blockScrolling: true }}\r\n        enableBasicAutocompletion={true}\r\n        enableLiveAutocompletion={true}\r\n        annotations={props.error}\r\n        enableSnippets={true}\r\n        height= {props.maxHeight}\r\n        width={'100%'}\r\n        fontSize={props.textSize}\r\n        setOptions={{ highlightActiveLine: true, highlightSelectedWord: false }}\r\n        onInput={props.CleanError}\r\n\r\n    />\r\n}\r\n\r\nexport default Editor;"," const modifyState = (state, modify) => {\r\n    const stateCopy = deepCopy(state);\r\n    modify(stateCopy);\r\n    return stateCopy;\r\n}\r\nfunction deepCopy(obj) {\r\n    var copy = JSON.parse(JSON.stringify(obj));\r\n    return copy;\r\n}\r\n\r\nexport default modifyState;","const initState = {\r\n    collapsed: false,\r\n    view:{\r\n        registers: true,\r\n        textEditor: true,\r\n        memory:true,\r\n        console:true,\r\n        graphicBorder: true\r\n    },\r\n    textColor:\"github\",\r\n    textSize:16,\r\n    tableSize:\"default\",\r\n    error:[],\r\n    currentTableView: {\r\n        startAddressInCurrentPage:0,\r\n        rows:[{byteNumberZero:\"\",byteNumberOne:\"\",byteNumberTwo:\"\",byteNumberThree:\"\",key:\"\"}]\r\n    },\r\n    memory:{},\r\n    program:\"\",\r\n    registers:[\r\n        {name: \"zero/x0\", value: 0}\r\n        ,{name: \"ra/x1\", value: 0}\r\n        ,{name: \"sp/x2\", value: 0}\r\n        ,{name: \"gp/x3\", value: 0}\r\n        ,{name: \"tp/x4\", value: 0}\r\n        ,{name: \"t0/x5\", value: 0}\r\n        ,{name: \"t1/x6\", value: 0}\r\n        ,{name: \"t2/x7\", value: 0}\r\n        ,{name: \"s0/x8\", value: 0}\r\n        ,{name: \"s1/x9\", value: 0}\r\n        ,{name: \"a0/x10\", value: 0}\r\n        ,{name: \"a1/x11\", value: 0}\r\n        ,{name: \"a2/x12\", value: 0}\r\n        ,{name: \"a3/x13\", value: 0}\r\n        ,{name: \"a4/x14\", value: 0}\r\n        ,{name: \"a5/x15\", value: 0}\r\n        ,{name: \"a6/x16\", value: 0}\r\n        ,{name: \"a7/x17\", value: 0}\r\n        ,{name: \"s2/x18\", value: 0}\r\n        ,{name: \"s3/x19\", value: 0}\r\n        ,{name: \"s4/x20\", value: 0}\r\n        ,{name: \"s5/x21\", value: 0}\r\n        ,{name: \"s6/x22\", value: 0}\r\n        ,{name: \"s7/x23\", value: 0}\r\n        ,{name: \"s8/x24\", value: 0}\r\n        ,{name: \"s9/x25\", value: 0}\r\n        ,{name: \"s10/x26\", value: 0}\r\n        ,{name: \"s11/x27\", value: 0}\r\n        ,{name: \"t3/x28\", value: 0}\r\n        ,{name: \"t4/x29\", value: 0}\r\n        ,{name: \"t5/x30\", value: 0}\r\n        ,{name: \"t6/x31\", value: 0}\r\n        ,{name: \"pc\", value: 0}],\r\n    debugSnapshot: [],\r\n    lineOfDebugSnapshot:0,\r\n    loading: false,\r\n    alphanumericData: \"\",\r\n    alphanumericLine: 0,\r\n    DebugMode: false,\r\n    commandsToExe: [],\r\n    debugRes: [],\r\n    tayping: false,\r\n    res: null,\r\n    stringTable:[],\r\n    paintBord:{\"lines\":[],\"width\":\"100%\",\"height\":\"30vh\"}\r\n}\r\n\r\nexport default initState;","import modifyState from '../Utils/DeepCopy'\r\nimport initState from './State'\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'COLLAPSED':\r\n            return modifyState(state, s => {\r\n                s.collapsed = !s.collapsed;\r\n            });\r\n        case 'VIEW_REGISTERS_CLICKED':\r\n            return modifyState(state, s => {\r\n                s.view.registers = !s.view.registers;\r\n            });\r\n        case 'VIEW_TEXT_EDITOR_CLICKED':\r\n            return modifyState(state, s => {\r\n                s.view.textEditor = !s.view.textEditor;\r\n            });\r\n        case 'VIEW_MEMORY_CLICKED':\r\n            return modifyState(state, s => {\r\n                s.view.memory = !s.view.memory;\r\n            });\r\n        case 'VIEW_GRAPHIC_BORDER_CLICKED':\r\n            return modifyState(state, s => {\r\n                s.view.graphicBorder = !s.view.graphicBorder;\r\n            });\r\n        case 'COLOR_EDITOR':\r\n            return modifyState(state, s => {\r\n                s.textColor = action.data;\r\n            });\r\n        case 'TEXT_SIZE':\r\n            return modifyState(state, s => {\r\n                s.textSize = action.data;\r\n            });\r\n        case 'TABLE_SIZE':\r\n            return modifyState(state, s => {\r\n                s.tableSize = action.data;\r\n            });\r\n        case 'PROGRAM_CHANGE':\r\n            return modifyState(state, s => {\r\n                s.program = action.data;\r\n            });\r\n        case 'REGISTER_TEXT_CHANGE':\r\n            return modifyState(state, s => {\r\n                s.registers[action.index] = (action.data);\r\n            });\r\n        case 'FETCH_COMPILE_PROGRAM_START':\r\n            return modifyState(state, s => {\r\n                s.loading = true;\r\n            });\r\n        case 'FETCH_DEBUG_PROGRAM_START':\r\n            return modifyState(state, s => {\r\n                s.loading = true;\r\n            });\r\n        case 'FETCH_CONTINUE_PROGRAM_RESULT':\r\n            return modifyState(state, s => {\r\n                s.debugRes = action.debugRes;\r\n                s.commandsToExe = action.commandsToExe;\r\n                s.DebugMode = action.debugMode;\r\n                s.res = action.res;\r\n                s.stringTable = action.stringTable;\r\n            });\r\n        case 'FETCH_COMPILE_PROGRAM_SUCCESS':\r\n            return modifyState(state, s => {\r\n                s.loading = false;\r\n                s.memory = action.data.memory;\r\n                s.registers = action.data.register;\r\n                s.alphanumericData = action.data.alphanumericData.output.reduce((str, value) => str += value + \"\\n\", \"\");\r\n                s.paintBord.lines = action.data.graphicBorder;\r\n            });\r\n        case 'FETCH_DEBUG_PROGRAM_SUCCESS':\r\n            return modifyState(state, s => {\r\n                s.error = [];\r\n                s.loading = false;\r\n                s.DebugMode = true;\r\n                s.debugSnapshot = action.data;\r\n                s.memory = action.data[action.lineToContinue].memory;\r\n                s.registers = action.data[action.lineToContinue].register;\r\n                s.alphanumericData = action.data[action.lineToContinue].alphanumericData.output.reduce((str, value) => str += value + \"\\n\", \"\");\r\n                s.error.push({ row: s.debugSnapshot[action.lineToContinue].debugLine , type: 'warning', text: \"Current debugging line\" });\r\n                s.lineOfDebugSnapshot = 0;\r\n\r\n            });\r\n        case 'FETCH_COMPILE_PROGRAM_FAIL':\r\n            return modifyState(state, s => {\r\n                s.loading = false;\r\n                s.error.push({ row: action.data.line , type: 'error', text: action.data.message });\r\n            });\r\n        case 'FETCH_DEBUG_PROGRAM_FAIL':\r\n            return modifyState(state, s => {\r\n                s.loading = false;\r\n                s.error.push({ row: action.data.line , type: 'error', text: action.data.message });\r\n            });\r\n        case 'CLEAN_ERROR':\r\n            return modifyState(state, s => {\r\n                s.error = [];\r\n            });\r\n        case 'AlPHA_NUMERIC_WINDOW_INPUT':\r\n            return modifyState(state, s => {\r\n                s.alphanumericData = action.data;\r\n            });\r\n        case 'NEXT_LINE_DEBUG_PROGRAM':\r\n            return modifyState(state, s => {\r\n                s.lineOfDebugSnapshot++;\r\n                s.error = [];\r\n                s.memory = s.debugSnapshot[s.lineOfDebugSnapshot].memory;\r\n                s.registers = s.debugSnapshot[s.lineOfDebugSnapshot].register;\r\n                s.alphanumericData = s.debugSnapshot[s.lineOfDebugSnapshot].alphanumericData.output.reduce((str, value) => str += value + \"\\n\", \"\");\r\n                s.error.push({ row: s.debugSnapshot[s.lineOfDebugSnapshot].debugLine, type: 'warning', text: \"Current debugging line\" });\r\n            });\r\n        case 'PREV_LINE_DEBUG_PROGRAM':\r\n            return modifyState(state, s => {\r\n                s.lineOfDebugSnapshot--;\r\n                s.error = [];\r\n                s.memory = s.debugSnapshot[s.lineOfDebugSnapshot].memory;\r\n                s.registers = s.debugSnapshot[s.lineOfDebugSnapshot].register;\r\n                s.alphanumericData = s.debugSnapshot[s.lineOfDebugSnapshot].alphanumericData.output.reduce((str, value) => str += value + \"\\n\", \"\");\r\n                s.error.push({ row: s.debugSnapshot[s.lineOfDebugSnapshot].debugLine, type: 'warning', text: \"Current debugging line\" });\r\n            });\r\n        case 'UPLOAD_FILE':\r\n            return  action.data;\r\n        case 'SEND_PAINT_BORD':\r\n            return modifyState(state, s => {\r\n                if (action.remove)\r\n                    s.paintBord.lines = s.paintBord.lines.filter(line => !include(line.points, action.data));\r\n                else {\r\n                    s.paintBord.lines = action.data;\r\n                    //s.paintBord.lines = s.paintBord.lines.concat(action.data)\r\n                }\r\n            });\r\n        case 'TYPING_SWITCH':\r\n            return modifyState(state, s=> {\r\n                s.tayping = action.data;\r\n            });\r\n        case 'CLEAR_SCREEN':\r\n        return modifyState(state, s=> {\r\n            s.memory = initState.memory;\r\n            s.registers = initState.registers;\r\n            s.debugSnapshot = initState.debugSnapshot;\r\n            s.lineOfDebugSnapshot = initState.lineOfDebugSnapshot;\r\n            s.alphanumericData = initState.alphanumericData;\r\n            s.alphanumericLine = initState.alphanumericLine;\r\n            s.paintBord = initState.paintBord;\r\n        });\r\n        case 'PREPARE_TABLE_PAGE':\r\n            return modifyState(state, s => {\r\n                let startAddres = action.data;\r\n                let result = [];\r\n                s.currentTableView.startAddressInCurrentPage = action.data;\r\n                for (let i = 0; i < 9; i++) {\r\n                    result.push({\r\n                        address: \"0x\" + startAddres.toString(16),\r\n                        byteNumberThree: s.memory[startAddres + 3] ? \"0x\" + s.memory[startAddres + 3].toString(16) : \"0\",\r\n                        byteNumberTwo: s.memory[startAddres + 2] ? \"0x\" + s.memory[startAddres + 2].toString(16) : \"0\",\r\n                        byteNumberOne: s.memory[startAddres + 1] ? \"0x\" + s.memory[startAddres + 1].toString(16) : \"0\",\r\n                        byteNumberZero: s.memory[startAddres] ? \"0x\" + s.memory[startAddres].toString(16) : \"0\",\r\n                        key: startAddres\r\n                    });\r\n                    startAddres -= 4;\r\n                }\r\n                s.currentTableView.rows = result;\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst include = (item, arr) => {\r\n    const jsonItem = JSON.stringify(item)\r\n    let result = false;\r\n    arr.forEach(arrItem => {\r\n        if (JSON.stringify(arrItem.points) === jsonItem)\r\n            result = true;\r\n    })\r\n    return result;\r\n}\r\nexport default reducer; ","import * as actionTypes from './ActionTypes';\r\n\r\n\r\nexport const Collapsed = () => {\r\n    return {\r\n        type: actionTypes.COLLAPSED\r\n    }\r\n}\r\n\r\nexport const ViewRegistersClicked = () => {\r\n    return {\r\n        type: actionTypes.VIEW_REGISTERS_CLICKED\r\n    }\r\n}\r\n\r\nexport const ViewTextEditorClicked = () => {\r\n    return {\r\n        type: actionTypes.VIEW_TEXT_EDITOR_CLICKED\r\n    }\r\n}\r\n\r\nexport const ViewMemoryClicked = () => {\r\n    return {\r\n        type: actionTypes.VIEW_MEMORY_CLICKED\r\n    }\r\n}\r\n\r\nexport const ViewgraphicBorderClicked = () => {\r\n    return {\r\n        type: actionTypes.VIEW_GRAPHIC_BORDER_CLICKED\r\n    }\r\n}\r\n\r\nexport const ThemeMenuDrakClicked = () => {\r\n    return {\r\n        type: actionTypes.MENU_THEME_DARK\r\n    }\r\n}\r\n\r\nexport const ThemeMenuLightClicked = () => {\r\n    return {\r\n        type: actionTypes.MENU_THEME_LIGHT\r\n    }\r\n}\r\n\r\nexport const ColorEditor = (colorName) => {\r\n    return {\r\n        type: actionTypes.COLOR_EDITOR,\r\n        data: colorName\r\n    }\r\n}\r\n\r\nexport const TextSize = (textSize) => {\r\n    return {\r\n        type: actionTypes.TEXT_SIZE,\r\n        data: textSize\r\n    }\r\n}\r\n\r\nexport const ProgramChange = (program) => {\r\n    return {\r\n        type: actionTypes.PROGRAM_CHANGE,\r\n        data: program\r\n    }\r\n}\r\n\r\nexport const TableSize = (tableSize) => {\r\n    return {\r\n        type: actionTypes.TABLE_SIZE,\r\n        data: tableSize\r\n    }\r\n}\r\nexport const RegisterTextChange = (registerInfo,arrNum) => {\r\n    return {\r\n        type: actionTypes.REGISTER_TEXT_CHANGE,\r\n        data: registerInfo,\r\n        index: arrNum\r\n    }\r\n}\r\n\r\nexport const PrepareTablePage = (startAddressInCurrentPage) => {\r\n    return {\r\n        type: actionTypes.PREPARE_TABLE_PAGE,\r\n        data: startAddressInCurrentPage\r\n    }\r\n}\r\n\r\nexport const AlphaNumericWindowInpute = (input) => {\r\n    return {\r\n        type: actionTypes.AlPHA_NUMERIC_WINDOW_INPUT,\r\n        data: input\r\n    }\r\n}\r\n\r\nexport const FetchCompileProgramStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_COMPILE_PROGRAM_START,\r\n    }\r\n}\r\n\r\nexport const FetchDebugProgramStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_DEBUG_PROGRAM_START,\r\n    }\r\n}\r\n\r\nexport const FetchCompileSuccess = (compileProgram) => {\r\n    return {\r\n        type: actionTypes.FETCH_COMPILE_PROGRAM_SUCCESS,\r\n        data: compileProgram\r\n    }\r\n}\r\n\r\nexport const FetchDebugSuccess = (debugProgram, lineToContinue = 0) => {\r\n    return {\r\n        type: actionTypes.FETCH_DEBUG_PROGRAM_SUCCESS,\r\n        data: debugProgram,\r\n        lineToContinue: lineToContinue\r\n    }\r\n}\r\n\r\nexport const FetchContinueProgramResult = (debugRes,commandsToExe,DebugMode,res,stringTable) => {\r\n    return {\r\n        type: actionTypes.FETCH_CONTINUE_PROGRAM_RESULT,\r\n        debugRes: debugRes,\r\n        commandsToExe: commandsToExe,\r\n        DebugMode: DebugMode,\r\n        res: res,\r\n        stringTable: stringTable\r\n    }\r\n}\r\n\r\nexport const FetchCompileProgramfail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_COMPILE_PROGRAM_FAIL,\r\n        data: error\r\n\r\n    }\r\n}\r\n\r\nexport const FetchDebugProgramfail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_DEBUG_PROGRAM_FAIL,\r\n        data: error\r\n\r\n    }\r\n}\r\n\r\nexport const NextLineDebugProgram = () => {\r\n    return {\r\n        type: actionTypes.NEXT_LINE_DEBUG_PROGRAM\r\n    }\r\n}\r\n\r\nexport const PrevLineDebugProgram = () => {\r\n    return {\r\n        type: actionTypes.PREV_LINE_DEBUG_PROGRAM\r\n    }\r\n}\r\n\r\nexport const CleanError = () => {\r\n    return {\r\n        type: actionTypes.CLEAN_ERROR\r\n    }\r\n}\r\n\r\nexport const ClearScreen = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_SCREEN\r\n    }\r\n}\r\n\r\nexport const UploadFile = (data) => {\r\n    return {\r\n        type: actionTypes.UPLOAD_FILE,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const TypingSwitch = (bool) => {\r\n    return {\r\n        type: actionTypes.TYPING_SWITCH,\r\n        data: bool\r\n    }\r\n}\r\n\r\nexport const sendPaintBord = (data,remove) => {\r\n    return {\r\n        type: actionTypes.SEND_PAINT_BORD,\r\n        data: data,\r\n        remove: remove\r\n    }\r\n}","export const COLLAPSED = 'COLLAPSED';\r\n\r\nexport const VIEW_REGISTERS_CLICKED = 'VIEW_REGISTERS_CLICKED';\r\nexport const VIEW_TEXT_EDITOR_CLICKED = 'VIEW_TEXT_EDITOR_CLICKED';\r\nexport const VIEW_MEMORY_CLICKED = 'VIEW_MEMORY_CLICKED';\r\nexport const VIEW_GRAPHIC_BORDER_CLICKED = 'VIEW_GRAPHIC_BORDER_CLICKED';\r\n\r\nexport const MENU_THEME_LIGHT = 'MENU_THEME_LIGHT';\r\nexport const MENU_THEME_DARK = 'MENU_THEME_DARK';\r\n\r\nexport const COLOR_EDITOR = 'COLOR_EDITOR';\r\nexport const TEXT_SIZE = 'TEXT_SIZE';\r\nexport const TABLE_SIZE = 'TABLE_SIZE';\r\nexport const PROGRAM_CHANGE = 'PROGRAM_CHANGE';\r\nexport const REGISTER_TEXT_CHANGE = 'REGISTER_TEXT_CHANGE';\r\nexport const PREPARE_TABLE_PAGE = 'PREPARE_TABLE_PAGE';\r\n\r\nexport const FETCH_COMPILE_PROGRAM_START = 'FETCH_COMPILE_PROGRAM_START';\r\nexport const FETCH_COMPILE_PROGRAM_SUCCESS = 'FETCH_COMPILE_PROGRAM_SUCCESS';\r\nexport const FETCH_COMPILE_PROGRAM_FAIL = 'FETCH_COMPILE_PROGRAM_FAIL';\r\n\r\nexport const FETCH_CONTINUE_PROGRAM_RESULT = 'FETCH_CONTINUE_PROGRAM_RESULT';\r\nexport const FETCH_CONTINUE_DEBUG_RESULT = 'FETCH_CONTINUE_DEBUG_RESULT';\r\n\r\nexport const FETCH_DEBUG_PROGRAM_START = 'FETCH__DEBUGPROGRAM_START';\r\nexport const FETCH_DEBUG_PROGRAM_SUCCESS = 'FETCH_DEBUG_PROGRAM_SUCCESS';\r\nexport const FETCH_DEBUG_PROGRAM_FAIL = 'FETCH_DEBUG_PROGRAM_FAIL';\r\n\r\nexport const NEXT_LINE_DEBUG_PROGRAM = 'NEXT_LINE_DEBUG_PROGRAM';\r\nexport const PREV_LINE_DEBUG_PROGRAM = 'PREV_LINE_DEBUG_PROGRAM';\r\n\r\nexport const CLEAN_ERROR = 'CLEAN_ERROR';\r\n\r\nexport const UPLOAD_FILE = 'UPLOAD_FILE';\r\nexport const SEND_PAINT_BORD = 'SEND_PAINT_BORD';\r\n\r\nexport const AlPHA_NUMERIC_WINDOW_INPUT = 'AlPHA_NUMERIC_WINDOW_INPUT';\r\n\r\nexport const TYPING_SWITCH = 'TYPING_SWITCH';\r\n\r\nexport const CLEAR_SCREEN = 'CLEAR_SCREEN';\r\n","import React, { useReducer, useEffect, useRef } from 'react';\r\nimport { Layout, Menu, Breadcrumb, Icon, Button, Dropdown, Input } from 'antd';\r\nimport Editor from './Editor';\r\nimport logoIMG from '../RISC-V-logo.svg';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Table } from 'antd';\r\nimport reducer from './State/Reducer';\r\nimport initState from './State/State';\r\nimport * as stateAction from './State/stateAction';\r\nimport axios from 'axios';\r\nimport download from 'downloadjs';\r\nimport CanvasDraw from \"react-canvas-draw\";\r\n\r\nimport './Layout.css';\r\nimport 'antd/lib/menu/style/css';\r\nimport 'antd/lib/layout/style/css';\r\nimport 'antd/lib/table/style/css';\r\nimport { stat } from 'fs';\r\n\r\nconst WebLayout = () => {\r\n    const { Content, Sider } = Layout;\r\n    const { TextArea } = Input;\r\n    const SubMenu = Menu.SubMenu;\r\n    const ButtonGroup = Button.Group;\r\n    const [state, dispatch] = useReducer(reducer, initState);\r\n    const uploadRef = useRef(null);\r\n    let fileReader;\r\n    const originPaint = { \"points\": [{ \"x\": 61.99998474121094, \"y\": 38.962493896484375 }, { \"x\": 61.99998474121094, \"y\": 38.962493896484375 }], \"brushColor\": \"#444\", \"brushRadius\": 12 };\r\n    useEffect(() => {\r\n        dispatch(stateAction.PrepareTablePage(65568));\r\n    }, []);\r\n\r\n    const onPageDown = () => {\r\n        if (state.currentTableView.startAddressInCurrentPage - 32 !== 0) {\r\n            dispatch(stateAction.PrepareTablePage(state.currentTableView.startAddressInCurrentPage - 36));\r\n        }\r\n    }\r\n\r\n    const paintCoordinates = (borderData, remove = false) => {\r\n        let res = [];\r\n        borderData.forEach(coordinate => {\r\n            coordinate.points.forEach(p => {\r\n                const x = (p.x - 1) * 25 - 50;\r\n                const y = p.y * 25 - 50;\r\n                res.push(moveCoordinateTo(originPaint, x, y, coordinate.color))\r\n            });\r\n        });\r\n        dispatch(stateAction.sendPaintBord(res, remove));\r\n    }\r\n\r\n    const moveCoordinateTo = (origin, moveX, moveY, color) => {\r\n        return {\r\n            brushColor: color,\r\n            brushRadius: origin.brushRadius,\r\n            points: origin.points.map(point => {\r\n                return {\r\n                    x: point.x + moveX,\r\n                    y: point.y + moveY\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    const onPageUp = () => {\r\n        if (state.currentTableView.startAddressInCurrentPage + 32 < 201326576) {\r\n            dispatch(stateAction.PrepareTablePage(state.currentTableView.startAddressInCurrentPage + 36));\r\n        }\r\n    }\r\n\r\n    const onClearScreen = () => {\r\n        dispatch(stateAction.ClearScreen());\r\n        dispatch(stateAction.PrepareTablePage(65568));\r\n        dispatch(stateAction.TypingSwitch(false));\r\n    }\r\n\r\n    const onProgramChange = (value) => {\r\n        dispatch(stateAction.ProgramChange(value));\r\n    }\r\n\r\n    const CleanError = () => {\r\n        dispatch(stateAction.CleanError());\r\n    }\r\n\r\n    const onRegisterChange = (event, arrNum) => {\r\n        dispatch(stateAction.RegisterTextChange({ name: event.target.id, value: event.target.value }, arrNum));\r\n    }\r\n\r\n    const fileHandler = () => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(uploadRef.current.files[0]);\r\n    }\r\n\r\n    const handleFileRead = (e) => {\r\n        const content = JSON.parse(fileReader.result);\r\n        dispatch(stateAction.UploadFile(content.state));\r\n        dispatch(stateAction.PrepareTablePage(65568));\r\n    };\r\n\r\n    const debugProgram = () => {\r\n        CleanError();\r\n        axios.post(window.location.origin +\"/api/Simulator/ProgramToRun\", {\r\n            Program: state.program,\r\n            Registers: state.registers,\r\n            DebugMode: true\r\n        }).then((res) => {\r\n            if (!res.data.commandsToExe) {\r\n                dispatch(stateAction.FetchDebugSuccess(res.data));\r\n                dispatch(stateAction.PrepareTablePage(65568));\r\n                dispatch(stateAction.TypingSwitch(false));\r\n            } else {\r\n                dispatch(stateAction.FetchContinueProgramResult(res.data.debugRes, res.data.commandsToExe, res.data.DebugMode, res.data.res, res.data.stringTable));\r\n                dispatch(stateAction.FetchDebugSuccess(res.data.debugRes));\r\n                dispatch(stateAction.PrepareTablePage(65568));\r\n                dispatch(stateAction.TypingSwitch(true));\r\n            }\r\n        })\r\n            .catch((err => {\r\n                dispatch(stateAction.FetchCompileProgramfail(err.response.data));\r\n            }));\r\n    }\r\n\r\n    const runProgram = () => {\r\n        CleanError();\r\n        axios.post(window.location.origin +\"/api/Simulator/ProgramToRun\", {\r\n            Program: state.program,\r\n            Registers: state.registers\r\n        }).then((res) => {\r\n            if (res.data.register) {\r\n                dispatch(stateAction.FetchCompileSuccess(res.data));\r\n                paintCoordinates(res.data.graphicBorder)\r\n                dispatch(stateAction.TypingSwitch(false));\r\n\r\n            } else {\r\n                dispatch(stateAction.FetchCompileSuccess(res.data.res));\r\n                dispatch(stateAction.FetchContinueProgramResult(res.data.debugRes, res.data.commandsToExe, res.data.DebugMode, res.data.res, res.data.stringTable));\r\n                paintCoordinates(res.data.res.graphicBorder)\r\n                dispatch(stateAction.TypingSwitch(true));\r\n            }\r\n            dispatch(stateAction.PrepareTablePage(65568));\r\n        })\r\n            .catch((err => {\r\n                dispatch(stateAction.FetchCompileProgramfail(err.response.data));\r\n            }));\r\n    }\r\n\r\n    const jumpTo = (x) => {\r\n        dispatch(stateAction.PrepareTablePage(x));\r\n    }\r\n\r\n\r\n    const continueProgram = () => {\r\n\r\n        if (state.DebugMode) {\r\n            state.debugSnapshot[state.debugSnapshot.length - 1].alphanumericData.input = state.alphanumericData;\r\n            axios.post(window.location.origin + \"/api/Simulator/ProgramToContinue\", {\r\n                res: {\r\n                    Register: state.debugSnapshot[state.debugSnapshot.length - 1].register,\r\n                    StackTextFreePosition: state.debugSnapshot[state.debugSnapshot.length - 1].stackTextFreePosition,\r\n                    StackStaticDataFreePosition: state.debugSnapshot[state.debugSnapshot.length - 1].stackStaticDataFreePosition,\r\n                    StackDynamicDataFreePosition: state.debugSnapshot[state.debugSnapshot.length - 1].stackDynamicDataFreePosition,\r\n                    Memory: state.debugSnapshot[state.debugSnapshot.length - 1].memory,\r\n                    DebugLine: state.debugSnapshot[state.debugSnapshot.length - 1].debugLine,\r\n                    GraphicBorder: state.debugSnapshot[state.debugSnapshot.length - 1].graphicBorder,\r\n                    AlphanumericData: state.debugSnapshot[state.debugSnapshot.length - 1].alphanumericData,\r\n                },\r\n                debugRes: state.debugRes,\r\n                commandsToExe: state.commandsToExe,\r\n                DebugMode: true,\r\n                stringTable: state.stringTable\r\n            }).then((res) => {\r\n                if (!res.data.commandsToExe) {\r\n                    dispatch(stateAction.FetchDebugSuccess(res.data, state.debugSnapshot.length));\r\n                    dispatch(stateAction.TypingSwitch(false));\r\n                } else {\r\n                    dispatch(stateAction.FetchContinueProgramResult(res.data.debugRes, res.data.commandsToExe, res.data.DebugMode, res.data.res, res.data.stringTable));\r\n                    dispatch(stateAction.FetchDebugSuccess(res.data.debugRes, state.debugSnapshot.length));\r\n                    dispatch(stateAction.TypingSwitch(true));\r\n                }\r\n            }).catch((err => {\r\n                dispatch(stateAction.FetchCompileProgramfail(err.response.data));\r\n            }));;\r\n        } else {\r\n            state.res.alphanumericData.input = state.alphanumericData;\r\n            axios.post(window.location.origin + \"/api/Simulator/ProgramToContinue\", {\r\n                res: {\r\n                    Register: state.res.register,\r\n                    StackTextFreePosition: state.res.stackTextFreePosition,\r\n                    StackStaticDataFreePosition: state.res.stackStaticDataFreePosition,\r\n                    StackDynamicDataFreePosition: state.res.stackDynamicDataFreePosition,\r\n                    Memory: state.res.memory,\r\n                    DebugLine: state.res.debugLine,\r\n                    GraphicBorder: state.res.graphicBorder,\r\n                    AlphanumericData: state.res.alphanumericData,\r\n                },\r\n                debugRes: [],\r\n                commandsToExe: state.commandsToExe,\r\n                DebugMode: state.DebugMode,\r\n                stringTable: state.stringTable\r\n            }).then((res) => {\r\n                if (res.data.register) {\r\n                    dispatch(stateAction.FetchCompileSuccess(res.data));\r\n                    paintCoordinates(res.data.graphicBorder)\r\n                    dispatch(stateAction.TypingSwitch(false));\r\n                } else {\r\n                    dispatch(stateAction.FetchCompileSuccess(res.data.res));\r\n                    dispatch(stateAction.FetchContinueProgramResult(res.data.debugRes, res.data.commandsToExe, res.data.DebugMode, res.data.res, res.data.stringTable));\r\n                    paintCoordinates(res.data.res.graphicBorder);\r\n                    dispatch(stateAction.TypingSwitch(true));\r\n\r\n                }\r\n                dispatch(stateAction.PrepareTablePage(65568));\r\n            }).catch((err => {\r\n                dispatch(stateAction.FetchCompileProgramfail(err.response.data));\r\n            }));;\r\n        }\r\n\r\n    }\r\n\r\n    const debugProgramNext = () => {\r\n        if (state.lineOfDebugSnapshot < state.debugSnapshot.length - 1) {\r\n            dispatch(stateAction.NextLineDebugProgram());\r\n            dispatch(stateAction.PrepareTablePage(state.currentTableView.startAddressInCurrentPage));\r\n            paintCoordinates(state.debugSnapshot[state.lineOfDebugSnapshot + 1].graphicBorder);\r\n        }\r\n        else\r\n        console.log(state.lineOfDebugSnapshot)\r\n    }\r\n\r\n    const onChangeHandler = (event) => {\r\n        dispatch(stateAction.AlphaNumericWindowInpute(event.target.value));\r\n    }\r\n    const debugProgramPrev = () => {\r\n        if (state.lineOfDebugSnapshot > 0) {\r\n            dispatch(stateAction.PrevLineDebugProgram());\r\n            dispatch(stateAction.PrepareTablePage(state.currentTableView.startAddressInCurrentPage));\r\n            paintCoordinates(state.debugSnapshot[state.lineOfDebugSnapshot - 1].graphicBorder);\r\n        }\r\n    }\r\n    const menu = (\r\n        <Menu>\r\n            <Menu.Item>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={() => jumpTo(201326576)}>Stack</a>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={() => jumpTo(268435488)}>Static data</a>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={() => jumpTo(65568)}>Text</a>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={() => jumpTo(32)}>Reserved</a>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n    return (\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n            <Sider\r\n                collapsible\r\n                collapsed={state.collapsed}\r\n                onCollapse={() => dispatch(stateAction.Collapsed())}>\r\n                <div style={{ height: '32px', margin: '16px' }}>\r\n                    <img src={logoIMG} className=\"IMGfit\" alt=\"logo\" />\r\n                </div>\r\n                <Menu theme=\"dark\" mode=\"inline\">\r\n                    <SubMenu\r\n                        key=\"sub1\"\r\n                        title={<span><Icon type=\"file\" /><span>File</span></span>}>\r\n                        <Menu.Item key=\"1\" onClick={() => download(JSON.stringify({ state }), \"RiscVBackup.json\", \"application/json\")}>Save File</Menu.Item>\r\n                        <Menu.Item key=\"2\" onClick={() => uploadRef.current.click()} >Upload File\r\n                        <input\r\n                                style={{ display: 'none' }}\r\n                                ref={uploadRef}\r\n                                type=\"file\"\r\n                                accpet='.json'\r\n                                multiple={false}\r\n                                onChange={fileHandler} />\r\n\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu\r\n                        key=\"sub2\"\r\n                        title={<span><Icon type=\"picture\" /><span>View</span></span>}>\r\n                        <Menu.Item key=\"3\" onClick={() => dispatch(stateAction.ViewRegistersClicked())}>Registers</Menu.Item>\r\n                        <Menu.Item key=\"4\" onClick={() => dispatch(stateAction.ViewTextEditorClicked())}>Program</Menu.Item>\r\n                        <Menu.Item key=\"5\" onClick={() => dispatch(stateAction.ViewMemoryClicked())}>Memory</Menu.Item>\r\n                        <Menu.Item key=\"7\" onClick={() => dispatch(stateAction.ViewgraphicBorderClicked())}>Graphic Border</Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu\r\n                        key=\"sub3\"\r\n\r\n                        title={<span><Icon type=\"bg-colors\" /><span>Style & Size</span></span>}>\r\n\r\n                        <SubMenu key=\"sub5\" title=\"Text Color\">\r\n                            <Menu.Item key=\"8\" onClick={() => dispatch(stateAction.ColorEditor(\"terminal\"))}>Terminal</Menu.Item>\r\n                            <Menu.Item key=\"9\" onClick={() => dispatch(stateAction.ColorEditor(\"chaos\"))}>Chaos</Menu.Item>\r\n                            <Menu.Item key=\"10\" onClick={() => dispatch(stateAction.ColorEditor(\"cobalt\"))}>RISC-V</Menu.Item>\r\n                            <Menu.Item key=\"15\" onClick={() => dispatch(stateAction.ColorEditor(\"monokai\"))}>Monokai</Menu.Item>\r\n                            <Menu.Item key=\"16\" onClick={() => dispatch(stateAction.ColorEditor(\"github\"))}>Github</Menu.Item>\r\n                            <Menu.Item key=\"18\" onClick={() => dispatch(stateAction.ColorEditor(\"kuroir\"))}>Kuroir</Menu.Item>\r\n                            <Menu.Item key=\"19\" onClick={() => dispatch(stateAction.ColorEditor(\"twilight\"))}>Twilight</Menu.Item>\r\n                            <Menu.Item key=\"20\" onClick={() => dispatch(stateAction.ColorEditor(\"xcode\"))}>Xcode</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub6\" title=\"Text Size\">\r\n                            <Menu.Item key=\"22\" onClick={() => dispatch(stateAction.TextSize(8))}>Small</Menu.Item>\r\n                            <Menu.Item key=\"23\" onClick={() => dispatch(stateAction.TextSize(16))}>Medium</Menu.Item>\r\n                            <Menu.Item key=\"24\" onClick={() => dispatch(stateAction.TextSize(25))}>Large</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub7\" title=\"Table Size\">\r\n                            <Menu.Item key=\"25\" onClick={() => dispatch(stateAction.TableSize(\"small\"))}>Small</Menu.Item>\r\n                            <Menu.Item key=\"26\" onClick={() => dispatch(stateAction.TableSize(\"middle\"))}>Medium</Menu.Item>\r\n                            <Menu.Item key=\"27\" onClick={() => dispatch(stateAction.TableSize(\"default\"))}>Large</Menu.Item>\r\n                        </SubMenu>\r\n                    </SubMenu>\r\n                    <Menu.Item key=\"28\" onClick={onClearScreen} >\r\n                        <Icon type=\"delete\" />\r\n                        <span>Clear Screen</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"9\" onClick={runProgram} >\r\n                        <Icon type=\"play-circle\" />\r\n                        <span>Run</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"10\" onClick={debugProgram} style={{ background: '#001529' }}>\r\n                        <Icon type=\"experiment\" />\r\n                        <span>Debug</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"11\" onClick={debugProgramNext} style={{ background: '#001529' }}>\r\n                        <Icon type=\"caret-right\" />\r\n                        <span>Next Step</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"12\" onClick={debugProgramPrev} style={{ background: '#001529' }}>\r\n                        <Icon type=\"caret-left\" />\r\n                        <span>Prev Step</span>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout >\r\n                <div className=\"items\" style={{ minHeight: '100vh' }}>\r\n\r\n                    {state.view.textEditor && <Breadcrumb style={{ margin: '0px 0', minWidth: '35%', width: \"100%\", borderRight: '1px solid #002140' }}>\r\n                        <div style={{ padding: 0 }}>\r\n                            <Editor\r\n                                color={state.textColor}\r\n                                textSize={state.textSize}\r\n                                onProgramChange={onProgramChange}\r\n                                program={state.program}\r\n                                error={state.error}\r\n                                CleanError={CleanError}\r\n                                maxHeight={state.view.graphicBorder ? '70vh' : '100vh'}\r\n                                lineOfDebugSnapshot={state.lineOfDebugSnapshot} />\r\n                        </div>\r\n                        {state.view.graphicBorder && <div style={{ padding: 0 }}>\r\n                            <CanvasDraw lazyRadius={0} brushRadius={12} saveData={JSON.stringify(state.paintBord)} immediateLoading={true} canvasWidth='100%' canvasHeight='30vh' disabled={true} />\r\n                        </div>}\r\n\r\n                    </Breadcrumb>}\r\n                    {state.view.registers && <div className=\"OverFlow\" style={{\r\n                        display: 'flex', background: '#fff', flexWrap: 'wrap', height: '100vh',\r\n                        overflowX: 'hidden', minWidth: '10%', width: \"100%\", borderRight: '1px solid #002140', padding: '0 5px'\r\n\r\n                    }}>\r\n                        <Breadcrumb >\r\n                            <div>\r\n                                <TextField\r\n                                    disabled\r\n                                    id=\"zero/x0\"\r\n                                    label=\"zero/x0\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={onRegisterChange}\r\n\r\n                                />\r\n                                <TextField\r\n                                    id=\"ra/x1\"\r\n                                    label=\"ra/x1\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 1)}\r\n                                    value={state.registers[1] ? state.registers[1].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"sp/x2\"\r\n                                    label=\"sp/x2\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 2)}\r\n                                    value={state.registers[2] ? state.registers[2].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"gp/x3\"\r\n                                    label=\"gp/x3\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 3)}\r\n                                    value={state.registers[3] ? state.registers[3].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"tp/x4\"\r\n                                    label=\"tp/x4\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 4)}\r\n                                    value={state.registers[4] ? state.registers[4].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"t0/x5\"\r\n                                    label=\"t0/x5\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 5)}\r\n                                    value={state.registers[5] ? state.registers[5].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"t1/x6\"\r\n                                    label=\"t1/x6\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 6)}\r\n                                    value={state.registers[6] ? state.registers[6].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"t2/x7\"\r\n                                    label=\"t2/x7\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 7)}\r\n                                    value={state.registers[7] ? state.registers[7].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"s0/fp/x8\"\r\n                                    label=\"s0/fp/x8\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 8)}\r\n                                    value={state.registers[8] ? state.registers[8].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"s1/x9\"\r\n                                    label=\"s1/x9\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 9)}\r\n                                    value={state.registers[9] ? state.registers[9].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"a0/x10\"\r\n                                    label=\"a0/x10\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 10)}\r\n                                    value={state.registers[10] ? state.registers[10].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"a1/x11\"\r\n                                    label=\"a1/x11\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 11)}\r\n                                    value={state.registers[11] ? state.registers[11].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"a2/x12\"\r\n                                    label=\"a2/x12\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 12)}\r\n                                    value={state.registers[12] ? state.registers[12].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"a3/x13\"\r\n                                    label=\"a3/x13\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 13)}\r\n                                    value={state.registers[13] ? state.registers[13].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"a4/x14\"\r\n                                    label=\"a4/x14\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 14)}\r\n                                    value={state.registers[14] ? state.registers[14].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"a5/x15\"\r\n                                    label=\"a5/x15\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 15)}\r\n                                    value={state.registers[15] ? state.registers[15].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"a6/x16\"\r\n                                    label=\"a6/x16\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 16)}\r\n                                    value={state.registers[16] ? state.registers[16].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"a7/x17\"\r\n                                    label=\"a7/x17\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 17)}\r\n                                    value={state.registers[17] ? state.registers[17].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"s2/x18\"\r\n                                    label=\"s2/x18\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 18)}\r\n                                    value={state.registers[18] ? state.registers[18].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"s3/x19\"\r\n                                    label=\"s3/x19\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 19)}\r\n                                    value={state.registers[19] ? state.registers[19].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"s4/x20\"\r\n                                    label=\"s4/x20\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 20)}\r\n                                    value={state.registers[20] ? state.registers[20].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"s5/x21\"\r\n                                    label=\"s5/x21\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 21)}\r\n                                    value={state.registers[21] ? state.registers[21].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"s6/x22\"\r\n                                    label=\"s6/x22\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 22)}\r\n                                    value={state.registers[22] ? state.registers[22].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"s7/x23\"\r\n                                    label=\"s7/x23\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 23)}\r\n                                    value={state.registers[23] ? state.registers[23].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"s8/x24\"\r\n                                    label=\"s8/x24\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 24)}\r\n                                    value={state.registers[24] ? state.registers[24].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"s9/x25\"\r\n                                    label=\"s9/x25\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 25)}\r\n                                    value={state.registers[25] ? state.registers[25].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"s10/x26\"\r\n                                    label=\"s10/x26\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 26)}\r\n                                    value={state.registers[26] ? state.registers[26].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"s11/x27\"\r\n                                    label=\"s11/x27\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 27)}\r\n                                    value={state.registers[27] ? state.registers[27].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"s11/x27\"\r\n                                    label=\"s11/x27\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 28)}\r\n                                    value={state.registers[28] ? state.registers[28].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"t4/x29\"\r\n                                    label=\"t4/x29\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 29)}\r\n                                    value={state.registers[29] ? state.registers[29].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"t5/x30\"\r\n                                    label=\"t5/x30\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 30)}\r\n                                    value={state.registers[30] ? state.registers[30].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"t6/x31\"\r\n                                    label=\"t6/x31\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 31)}\r\n                                    value={state.registers[31] ? state.registers[31].value : 0}\r\n                                />\r\n                                <TextField\r\n                                    id=\"pc\"\r\n                                    label=\"pc\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(event) => onRegisterChange(event, 32)}\r\n                                    value={state.registers[32] ? state.registers[32].value : 0}\r\n                                />\r\n                            </div>\r\n                        </Breadcrumb>\r\n                    </div>}\r\n                    {state.view.memory && <Content style={{ padding: 0, background: '#fff', minWidth: '50%', width: \"100%\", height: \"100vh\" }}>\r\n\r\n                        <div style={{ padding: 0, background: '#fff', height: '80%' }}>\r\n                            <Table dataSource={state.currentTableView.rows}\r\n                                bordered\r\n                                style={{ height: \"auto\" }}\r\n                                pagination={false}\r\n                                size={state.tableSize}>\r\n                                <Table.Column\r\n                                    title=\"Address\"\r\n                                    dataIndex=\"address\"\r\n                                    key=\"address\"\r\n                                />\r\n                                <Table.ColumnGroup title=\"Instructions Bytes\">\r\n                                    <Table.Column\r\n                                        title=\"0\"\r\n                                        dataIndex=\"byteNumberZero\"\r\n                                        key=\"byteNumberZero\"\r\n                                    />\r\n                                    <Table.Column\r\n                                        title=\"1\"\r\n                                        dataIndex=\"byteNumberOne\"\r\n                                        key=\"byteNumberOne\"\r\n                                    />\r\n                                    <Table.Column\r\n                                        title=\"2\"\r\n                                        dataIndex=\"byteNumberTwo\"\r\n                                        key=\"byteNumberTwo\"\r\n                                    />\r\n                                    <Table.Column\r\n                                        title=\"3\"\r\n                                        dataIndex=\"byteNumberThree\"\r\n                                        key=\"byteNumberThree\"\r\n                                    />\r\n                                </Table.ColumnGroup>\r\n                            </Table>\r\n                            <ButtonGroup style={{ display: 'flex', justifyContent: 'space-around', marginBottom: '10px', marginTop: '10px' }}>\r\n                                <Button type=\"primary\" onClick={() => onPageUp()}>\r\n                                    <Icon type=\"up\" />Go Up</Button>\r\n                                <Dropdown style={{ borderLeftColor: 'currentColor' }} overlay={menu} placement=\"topCenter\">\r\n                                    <Button style={{ borderLeftColor: 'currentColor' }}>Jump</Button>\r\n                                </Dropdown>\r\n                                <Button type=\"primary\" onClick={() => onPageDown()}>\r\n                                    Go Down<Icon type=\"down\" />\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                            <TextArea style={{ height: '10vh' }} value={state.alphanumericData} onPressEnter={state.tayping ? continueProgram : null} onChange={state.tayping ? onChangeHandler : null} />\r\n                        </div>\r\n                    </Content>}\r\n                </div>\r\n            </Layout>\r\n        </Layout >\r\n    );\r\n}\r\n\r\nexport default WebLayout;","import React, { Component } from 'react';\nimport './App.css';\nimport WebLayout from './components/Layout'\nclass App extends Component {\n  render() {\n    return (\n\n          <WebLayout>\n            \n          </WebLayout>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App/></BrowserRouter> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}